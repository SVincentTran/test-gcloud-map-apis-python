# This is a basic workflow to help you get started with Actions

name: deploy-cloud-function

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Deploy-Hello-World:
    runs-on: 'ubuntu-latest'
    steps:
  
    # Checkout 
    - id: 'checkout'
      uses: 'actions/checkout@v2'

    # Google Cloud server authentication with credentials_json key generated
    - id: 'auth'
      name: 'Authenticate to Google Cloud Server'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{secrets.APPSPOT_SA_KEY}}'

    # Setup Google Clous sdk environment for the task
    - id: 'setup'
      name: 'Setup Gcloud SDK environment'
      uses: 'google-github-actions/setup-gcloud@v0.2.1'

    # Deploy search_directions to Google Cloud Functions
    - id: 'deploy_1'
      name: 'Deploy searching for directions to cloud function'
      # run: gcloud functions deploy search_directions --trigger-http --runtime=python39
      uses: 'google-github-actions/deploy-cloud-functions@v0'
      with:
        name: 'search_directions'
        runtime: 'python39'
        entry_point: 'search_directions'

    # Deploy geocoding to Google Cloud Functions
    - id: 'deploy_2'
      name: 'Deploy geocoding to cloud function'
      uses: 'google-github-actions/deploy-cloud-functions@v0'
      with:
        name: 'geocoding'
        runtime: 'python39'
        entry_point: 'geocoding'

    # Setup Python environment
    - name: 'Setup Python'
      uses: 'actions/setup-python@v2'
      with:
        python-version: 3.8
    
    # Setup Pytest
    - name: 'Setup Pytest'
      run: 'pip install -r python_test_requirements.txt'

    # Test search_direction function
    - name: 'Test search_directions function'
      run: 'pytest testing/search_directions_test.py'

    # Test geocoding function
    - name: 'Test geocoding function'
      run: 'pytest testing/geocoding_test.py'

    # Export PORT for integration testing
    - name: 'Export PORT 8080 for integration testing'
      run: 'export PORT=8080'

    # Integration testing
    - name: 'Integration testing'
      run: 'pytest testing/search_directions_integration_test.py'

    # # Setup BASE_URL for system testing
    # - name: 'Setup HTTP_CLOUD_FUNC_BASE_URL for system testing'
    #   run: 'export HTTP_CLOUD_FUNC_BASE_URL="${{steps.deploy.outputs.url}}"'

    # # System testing
    # - name: 'System testing'
    #   run: 'pytest search_directions_system_test.py'
